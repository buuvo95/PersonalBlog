package dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import entity.User;

public class UserDAO {   
    
	jdbcController jdbcController = new jdbcController();
	
    public boolean insertUser(User user) throws SQLException {
    	String sql = "INSERT INTO user (firstname, lastname, mobile, email, password, image, registerAt, lastLogin) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
		jdbcController.connect();
		
		PreparedStatement statement = jdbcController.jdbcConnection.prepareStatement(sql);
		statement.setString(1, user.getFirstname());
		statement.setString(2, user.getLastname());
		statement.setString(3, user.getMobile());
		statement.setString(4, user.getEmail());
		statement.setString(5, user.getPassword());
		statement.setBytes(6, user.getImage());
		statement.setDate(7, java.sql.Date.valueOf(user.getRegisterAt()));
		statement.setDate(8, java.sql.Date.valueOf(user.getLastLogin()));
		
		boolean rowInserted = statement.executeUpdate() > 0;
		statement.close();
		jdbcController.disconnect();
    	return rowInserted;
    }
    
    public List<User> listAllUser() throws SQLException {
    	List<User> listUser  = new ArrayList<>();
    	String sql = "SELECT * FROM user";
    	
    	jdbcController.connect();
    	
    	Statement statement = jdbcController.jdbcConnection.createStatement();
    	ResultSet resultSet = statement.executeQuery(sql);
    	
    	while(resultSet.next()) {
    		int id = resultSet.getInt("id");
    		String firstname = resultSet.getString("firstname");
    		String lastname = resultSet.getString("lastname");
    		String mobile = resultSet.getString("mobile");
    		String email = resultSet.getString("email");
    		String password = resultSet.getString("password");
    		Byte image = resultSet.getByte("image");
    		String registerAt = resultSet.getString("registerAt");
    		String lastLogin = resultSet.getString("lastLogin");
    		
    		User user = new User(id, firstname, lastname, mobile, email, password, image, registerAt, lastLogin);
    		
    	}
    	
    	return null;
    }
    
    public boolean updateUser(User user) {
    	return false;
    }
    
    public boolean deleteUser(User user) {
    	return false;
    }
    
    public User getUser(int id) {
    	return null;
    }
}
